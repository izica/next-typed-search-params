{"version":3,"file":"index.mjs","sources":["../src/helpers/parseValue.ts","../src/configure/settings.ts","../src/helpers/parseSearchParams.ts","../src/hooks/useSearchParams.ts","../src/helpers/stringifySearchParams.ts","../src/helpers/setSearchParams.ts","../src/configure/index.ts","../src/index.ts"],"sourcesContent":["import { z } from \"zod\";\n\nexport const parseValue = (value: any, schema: z.ZodType | undefined) => {\n    if (value === undefined || schema === undefined) {\n        return undefined;\n    }\n    const { success, data } = schema.safeParse(value);\n    if (success) {\n        return data\n    }\n\n    return undefined;\n}\n","import type { ArrayFormatType } from \"../types/ArrayFormatType\";\n\nclass Settings {\n    arrayFormat: ArrayFormatType = \"bracket\";\n    arrayFormatSeparator: string = \",\";\n}\n\nconst settings = new Settings();\n\nexport { settings as Settings }\n","import { z } from \"zod\";\nimport queryString from \"query-string\";\n\nimport { parseValue } from \"./parseValue\";\nimport { Settings } from \"../configure/settings\";\n\nexport const parseSearchParams = <T, >(schema: Record<string, z.ZodType>, searchParamsString: string): T => {\n    const parsedSearchParams = queryString.parse(decodeURIComponent(searchParamsString), {\n        arrayFormat: Settings.arrayFormat,\n    });\n    const result: Record<string, any> = {};\n\n    for (let key in schema) {\n        result[key] = parseValue(parsedSearchParams[key], schema[key] || undefined);\n    }\n\n    return result as T;\n}\n","import { z } from \"zod\";\nimport { useSearchParams as useSearchParamsNext } from \"next/navigation\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport { parseSearchParams } from \"../helpers/parseSearchParams\";\n\nexport const useSearchParams = <T extends Record<string, z.ZodType>, >(config: (zod: typeof z) => T) => {\n    const schema = useMemo(() => z.object(config(z)), []);\n    const entry = useMemo(() => config(z), []);\n\n    const searchParams = useSearchParamsNext();\n\n    const [data, setData] = useState(\n        parseSearchParams<z.infer<typeof schema>>(entry, searchParams.toString())\n    );\n\n    useEffect(() => {\n        setData(parseSearchParams<z.infer<typeof schema>>(entry, searchParams.toString()));\n    }, [searchParams, schema, entry]);\n\n    useEffect(() => {\n        const handler = () => {\n            setData(parseSearchParams<z.infer<typeof schema>>(entry, window.location.search.substring(1)));\n        }\n        window.addEventListener('setSearchParams', handler);\n        return () => window.removeEventListener('setSearchParams', handler);\n    }, [entry]);\n\n    return data as z.infer<typeof schema>;\n}\n","import queryString from \"query-string\";\n\nimport { Settings } from \"../configure/settings\";\n\nexport const stringifySearchParams = (searchParams: Record<string, any>): string => {\n    return queryString.stringify(searchParams, {\n        arrayFormat: Settings.arrayFormat,\n        arrayFormatSeparator: ',',\n        encode: false,\n        skipNull: true,\n        skipEmptyString: true,\n    });\n}\n","import { stringifySearchParams } from \"./stringifySearchParams\";\n\nexport const setSearchParams = (entry: Record<string, any>) => {\n    const href = `${window.location.pathname}?` + stringifySearchParams(entry);\n    history.replaceState({\n        ...history.state,\n        as: href,\n        new: href\n    }, \"\", href);\n\n    window.dispatchEvent(new Event('setSearchParams'));\n}\n","import type { ArrayFormatType } from \"../types/ArrayFormatType\";\nimport { Settings } from \"./settings\";\n\nexport function configure(options: {\n    arrayFormat?: ArrayFormatType,\n    arrayFormatSeparator?: string\n}) {\n    if (options[\"arrayFormat\"]) {\n        Settings.arrayFormat = options[\"arrayFormat\"];\n    }\n\n    if (options[\"arrayFormatSeparator\"]) {\n        Settings.arrayFormatSeparator = options[\"arrayFormatSeparator\"];\n    }\n}\n","import { useSearchParams } from './hooks/useSearchParams';\nimport { stringifySearchParams } from './helpers/stringifySearchParams';\nimport { setSearchParams } from './helpers/setSearchParams';\nimport { configure } from './configure';\n\nexport default {\n    useSearchParams,\n    stringifySearchParams,\n    setSearchParams,\n    configure\n}\n"],"names":["Settings","useSearchParamsNext"],"mappings":"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"}